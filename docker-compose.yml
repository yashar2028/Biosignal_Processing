services:
  app:
    build: .  # Build the app image from the Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    command: >
      poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db  # Pointing to the db container below.
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - DBUS_SESSION_BUS_ADDRESS=/var/run/dbus/system_bus_socket
    privileged: true  # Allow privileged access to the container
    volumes:
      - /var/run/dbus:/var/run/dbus  # Mount DBus socket for Bluetooth
      - /dev:/dev  # Mount the entire /dev directory (including Bluetooth devices)
      - ./csv_output:/app/csv_output  # Mount the csv_output folder to the app container

    devices:
      - /dev/rfcomm0:/dev/rfcomm0  # Expose the Bluetooth device to the container

  db:
    image: postgres:15
    container_name: postgres_database_for_compose
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data  # Persist DB data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d  # Mount SQL dump to the initialization directory
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:

